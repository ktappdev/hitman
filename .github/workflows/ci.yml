name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.21, 1.22]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi
      shell: bash

    - name: Build
      run: go build -v ./...

    - name: Build binary
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          go build -o hitman.exe
        else
          go build -o hitman
        fi
      shell: bash

    - name: Test binary help
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./hitman.exe --help
        else
          ./hitman --help
        fi
      shell: bash

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: 1.21
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest